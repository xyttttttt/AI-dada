spring:
  application:
    name: xoj-backend-gateway
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    sentinel:
      transport:
        dashboard: sentinel-dashboard:8070
        port: 8071
      filter:
        enabled: false
      datasource: # sentinel用nacos作为数据源的配置
        flux-control: # 流控管理（这个名称可以自定义）
          nacos: # 告诉sentinel用nacos作为数据源
            data-id: xoj-sentinel-gateway.json # 配置中心里执行文件的dataId
            server-addr: ${spring.cloud.nacos.discovery.server-addr} # nacos的地址
            rule-type: gw_flow # 指定文件配置的是那种规则
            data-type: json
      scg:
        fallback:
          mode: response
          responseBody: "{\"code\":\"429\",\"msg\":\"请求太多了\"}"
    gateway:
      discovery:
        locator:
          lower-case-service-id: true
      routes:
        - id: xoj-backend-user-service
          uri: lb://xoj-backend-user-service
          predicates:
            - Path=/api/user/**
        - id: xoj-backend-question-service
          uri: lb://xoj-backend-question-service
          predicates:
            - Path=/api/question/**
        - id: xoj-backend-judge-service
          uri: lb://xoj-backend-judge-service
          predicates:
            - Path=/api/judge/**
        - id: xoj-backend-question-favourthumb-service
          uri: lb://xoj-backend-question-favourthumb-service
          predicates:
            - Path=/api/favour/thumb/**
      enabled: true
  main:
      web-application-type: reactive
server:
  port: 8101

knife4j:
  gateway:
    enabled: true
    # 指定服务发现的模式聚合微服务文档
    strategy: discover
    discover:
      enabled: true
      # 指定版本号(Swagger2|OpenAPI3)
      version : swagger2
      # 需要排除的微服务(eg:网关服务)
      excluded-services:
        - xoj-backend-gateway
